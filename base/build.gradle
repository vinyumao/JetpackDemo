apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def root_android = rootProject.ext.android
def root_dependencies = rootProject.ext.dependencies

android {
    compileSdkVersion root_android.compileSdkVersion

    defaultConfig {
        minSdkVersion root_android.minSdkVersion
        targetSdkVersion root_android.targetSdkVersion
        versionCode root_android.versionCode
        versionName root_android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    testApi root_dependencies.junit
    androidTestApi root_dependencies.test_ext_junit
    androidTestApi root_dependencies.test_espresso_core

    api root_dependencies.kotlin
    api root_dependencies.core_ktx
    api root_dependencies.fragment_ktx
    api root_dependencies.appcompat
    api root_dependencies.constraintlayout
    api root_dependencies.material
    api root_dependencies.navigation_fragment_ktx
    api root_dependencies.navigation_ui_ktx
    api root_dependencies.legacy_support_v4
    api root_dependencies.lifecycle
    api root_dependencies.viewmodel
    api root_dependencies.livedata
    api root_dependencies.room_runtime
    // For Kotlin use kapt instead of annotationProcessor
    kapt root_dependencies.room_compiler
    // optional - Kotlin Extensions and Coroutines support for Room
    api root_dependencies.room

    // For Kotlin use paging-runtime-ktx
    api root_dependencies.paging

    api root_dependencies.retrofit
    api root_dependencies.converter_gson
    api root_dependencies.gson
    api root_dependencies.logging_interceptor
    api root_dependencies.glide
    kapt root_dependencies.glide_compiler
    api root_dependencies.logger
    api root_dependencies.swiperefreshlayout
    api root_dependencies.lifecycle_runtime_ktx

    //hilt
    api root_dependencies.dagger_hilt
    kapt root_dependencies.dagger_hilt_compiler
    api root_dependencies.hilt_lifecycle_viewmodel
}